---
title: "Lab 2 Amazon Web Services (AWS) Setup Instructions"
subtitle: "{{< var course.number >}} {{< var course.semester >}}"
author: "{{< var instructor.name >}}"
format: 
  html:
    toc: false
---

{{< include login-to-saxanet.qmd >}} 

Follow these instructions _step-by-step_ to setup your AWS environment. The screenshots may look a bit different than what you are seeing, but the flow is the same.

::: callout-note
You can click on any screenshot on this page to see its full size version.
:::

# Task 1: Accept the Invitation to join the AWS Classroom (the first time)

1. In your student email inbox, you will have an email from _AWS Academy_ with the subject _Course Invitation_. 

1. Open the email. Click on the _Get Started_ button as shown in the screenshot below.
[![](img/aws-email.png)](img/aws-email.png)

1. Click on the _Create My Account_ button to create a new Canvas Account (note that this canvas account is different from your existing Georgetown canvas account).
[![](img/aws1.png)](img/aws1.png)

1. Register your new account.
[![](img/aws2.png)](img/aws2.png)

1. You should now be logged into _AWS Academy Learners Lab_ and seeing a screen like the one shown below. Click on _Learners Lab_
[![](img/aws4.png)](img/aws4.png)

1. Scroll all the way to the bottom of the page and accept the _Terms & Conditions_.
[![](img/aws5-2.png)](img/aws5-2.png)

1. You are now being logged in into the _AWS Console_. Notice the <font color="red">⬤</font> adjacent to the word _AWS_ towards the top left of the page. This indicates that the lab (i.e. the AWS resources) have not yet started. Click on the _play_ button along side _Start Lab_ on the to top right corner of the page to start the lab.
[![](img/aws6.png)](img/aws6.png)
[![](img/aws7.png)](img/aws7.png)

1. Each _lab session_ that you start is at most 4 hours and you can see a timer showing the remaining time (hh:mm) on the ribbon along with the remaining budget out of the $100 allocated to each account. 
[![](img/aws-ribbon.png)](img/aws-ribbon.png)

1. This environment is **long-lived**. When the session timer runs to 0:00, the session will end, but any data and resources that you created in the AWS account will be retained. If you later launch a new session (for example, the next day), you will find that your work is still in the lab environment.  Running EC2 instances will be stopped and then automatically restarted the next time you start a session. SageMaker notebook instances will be stopped, but not restarted the next time you start a session. 

::: callout-important
 Monitor your lab budget in the lab interface above. Whenever you have an active lab session, the latest known remaining budget information will display at the top of this screen. This data comes from AWS Budgets which typically updates every 8 to 12 hours. Therefore the remaining budget that you see may not reflect your most recent account activity.  If you exceed your lab budget your lab account will be disabled and all progress and resources will be lost. Therefore, it is important for you to manage your spending. Read about how to preserve your budget.
:::

## Login into the AWS Console

The _AWS Console_ is your entry point into the AWS cloud. 

1. Click on the AWS link alongside the <font color="lightgreen">⬤</font>.
[![](img/aws-console-launch1.png)](img/aws-console-launch1.png)

1. A new tab will open in your browser, this is the _AWS Console_.
[![](img/aws8.png)](img/aws8.png)

1. Note the URL in your browser's address bar, it will start with the name of the AWS region (such as _us-east-1_) in which your cloud resources are hosted. 

1. Note the username on the top right hand corner, this is your _Federated Identity_. Also note that the you did not have to provide any credentials (username/password) to login into the AWS console. _How did this happen?_
[![](img/aws-console-ribbon.png)](img/aws-console-ribbon.png)


## The SSO link to login into the AWS Console (Optional)

1. Click on the _AWS Details_ link on the ribbon, this will refresh the text in the panel below, click on *AWS SSO* button that is now visible on this panel. SSO stands for _Single Sign-On_ i.e. you do not need to provide your credentials everytime you want to login into this page. Clicking on the *AWS SSO* will download a file on your laptop, keep this file somewhere handy as you will need it in future. 
[![](img/aws-details.png)](img/aws-details.png)

1. Copy the contents of the ssourl.txt file that you just downloaded, open an _incognito browser window_ and paste them into the address bar of this _incognito browser window_. This will log you in into the *AWS Console*. You will notice that the URL in the address bar changes to the same URL as you had in the previous step.

::: callout-note
The credentials in the SSO link are _short-lived_, meaning that they are only valid for a short duration and therefore you cannot use them for a different session.
:::


### Saving AWS CLI credentials for programmatically talking to other AWS services

1. Click on the _AWS CLI_ button on the _AWS Details_.
![](img/aws-cli1.png)

1. Click on the _Show_ button. Copy paste the contents you see in a text editor on your laptop and save the file, we will be using these credentials from your EC2 Instance to connect to other AWS services.
[![](img/aws-cli2.png)](img/aws-cli2.png)

## Logging into AWS Academy at a later time

1. Open the [https://www.awsacademy.com/LMS_Login](https://www.awsacademy.com/LMS_Login) link in your browser window and click on *Student Login*.

[![](img/aws-studentlogin.png)](img/aws-studentlogin.png)

### Logging into the AWS Console at a later time

To access the AWS Console in the future, login to https://www.awsacademy.com/LMS_Login, go to _Learner Lab_ -> _Modules_ -> _Start Lab_.

::: callout-note
If you already had an AWS account prior to logging into AWS Academy you would need to login into the AWS Educate AWS account via an *Incognito Browser Window*.
:::

# Task 7: Create a SageMaker Studio Domain and Notebook

The Amazon SageMaker Studio is one of the data science tools that we will be using during this course. We will set a SageMaker Studio domain and start a Jupyter Notebook as part of this task so that we can use it for future labs.

1. Navigate to SageMaker Studio.
[![](img/aws-create-sm1.png)](img/sm-new/sm1.png)

1. Create a new SageMaker Studio domain. Select setup for organizations.
[![](img/sm-new/sm2.png)](img/sm-new/sm2.png)

1. Select a domain name as shown.
[![](img/sm-new/sm3.png)](img/sm-new/sm3.png)

1. Follow the screenshot and click on next.
[![](img/sm-new/sm4.png)](img/sm-new/sm4.png)

1. Select Sagemaker Classic and disable time series forecasting. Click on next.
[![](img/sm-new/sm5.png)](img/sm-new/sm5.png)

1. Select the VPCs as shown in the screenshot and default security group. Click on next.
[![](img/sm-new/sm6.png)](img/sm-new/sm6.png)

1. Click on next.
[![](img/sm-new/sm7.png)](img/sm-new/sm7.png)

1. Wait until the domain is created. Refresh the page after a minute or two.
[![](img/sm-new/sm9.png)](img/sm-new/sm9.png)

1. Now click on the Add User button after the domain is created.
[![](img/sm-new/sm10.png)](img/sm-new/sm10.png)

1. Rename the default-abc to your netid. Click on next.
[![](img/sm-new/sm11.png)](img/sm-new/sm11.png)

1. Click on next.
[![](img/sm-new/sm12.png)](img/sm-new/sm12.png)

1. Click on next.
[![](img/sm-new/sm13.png)](img/sm-new/sm13.png)

1. Disable everything related to canvas as shown in the screenshot. Click on next. Your domain will be successfully created.
[![](img/sm-new/sm14.png)](img/sm-new/sm14.png)

1. Wait for a while for the domain to be created. Refresh the page after a minute or two.
[![](img/sm-new/sm15.png)](img/sm-new/sm15.png)

1. Click on Launch, Select Studio.
[![](img/sm-new/sm16.png)](img/sm-new/sm16.png)

1. Sage Maker studio would be launched. Wait for it to get started. It usually takes a few minutes for the initial launch.
[![](img/sm-new/sm17.png)](img/sm-new/sm17.png)


::: callout-note
This is called a _managed service_, you get to work on the notebook without having to deal with the creation steps for the underlying infrastructure. You can easily change this configuration as per the requirements of the analytics/machine learning job you are running.
:::

[![](img/aws-create-sm11.png)](img/aws-create-sm11.png)

# Task 8: Use SageMaker Studio Notebook for analyzing a simple dataset (OPTIONAL)

We will analyze the _StateNames.csv_ dataset that is now present in your S3 bucket using the SageMaker Studio Notebook we just created.

1. Clone the git repo for this lab into SageMaker.
[![](img/aws-sm-git1.png)](img/aws-sm-git1.png)

1. The URL of the git repo would be of the format shown in the screenshot below.
[![](img/aws-sm-git2.png)](img/aws-sm-git2.png)

1. Once the repo is cloned, double click on the repo folder and then on the _analytics.ipynb_ file in the repo. This will open the Jupyter notebook in a SageMaker Studio Notebook.
[![](img/aws-sm-nb1.png)](img/aws-sm-nb1.png)

1. The notebook downloads the dataset from your S3 bucket and has some tasks for you to do. **Complete tasks 2, 3, 4 and 5 marked in the notebook and checkin the completed notebook in the git repo**.

## Shutting down SageMaker Studio

It is important to shutdown SageMaker Studio when not in use so that you do not get billed for it when you are not using it.

1. Click on _File -> Shutdown_.
[![](img/aws-create-sm12.png)](img/aws-create-sm12.png)

1. Select _Shutdown All_.
[![](img/aws-create-sm13.png)](img/aws-create-sm13.png)

::: callout-important

At the end of this lab:

1. Make sure you shutdown SageMaker Studio.

1. Make sure you shutdown EC2 VM.

1. Make sure you have ended the lab in AWS Educate by pressing the _End Lab_ button.
:::

## GitHub Classroom

[GitHub Classroom Link]({{< var gh-classroom.lab02 >}})
