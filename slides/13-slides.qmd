---
title: "Lecture 13"
subtitle: "Polars, DuckDB  and RAPIDS"
author: "{{< var instructor.name >}}"
institute:
- "{{< var university.name >}}"
- "{{< var course.semester >}}"
format:
  revealjs:
    slide-number: true
    show-slide-number: print
    theme: custom.scss
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    code-copy: true
---


## Before we begin..

>[Pandas](https://pandas.pydata.org/): pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language.

::: {.incremental}

1. Pandas is slow, well yes but also not so much if you use it the right way.

  - [Apache Arrow and the "10 Things I Hate About pandas"](https://wesmckinney.com/blog/apache-arrow-pandas-internals/) (<font color=red size=5>A 2017 post from the creator of Pandas..</font>)

  - [50 times faster data loading for Pandas: no problem](https://blog.esciencecenter.nl/irregular-data-in-pandas-using-c-88ce311cb9ef) (<font color=red size=5>but this is an old 2019 article..</font>)

  - [Is Pandas really that slow?](https://medium.com/@tommerrissin/is-pandas-really-that-slow-cff4352e4f58)

1. [Pandas 2.0 and the arrow revolution](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)

:::

## Polars

>Polars: Lightning-fast DataFrame library for Rust and Python

Why is it faster than Pandas?

::: {.incremental}

1. Written in [Rust](https://www.rust-lang.org/) (compiled not interpreted).

1. Uses all available cores of your machine.

1. Use PyArrow.

1. [My opinion] Makes it easier to write code the right away (has a strict schema and others)!
:::

# Using Polars

Install polars via pip.

```{.bash}
pip install polars
```

Import polars in your Python code as

```{.python}
import polars as pl
```

Read data as usual.

```{.python}
df = pd.read_parquet("s3a://bigdatateaching/nyctaxi-yellow-tripdata/2021/yellow_tripdata_2021-01.parquet")
```

## Coming from Pandas to Polars

::: columns

::: {.column width="50%"}
```{.python}
import pandas as pd
df = pd.DataFrame({
    "type": ["m", "n", "o", "m", "m", "n", "n"],
    "c": [1, 1, 1, 2, 2, 2, 2],
})

df["size"] = df.groupby("c")["type"].transform(len)
df
```
:::

::: {.column width="50%"}
```{.python}
import polars as pl
df = pl.DataFrame({
    "type": ["m", "n", "o", "m", "m", "n", "n"],
    "c": [1, 1, 1, 2, 2, 2, 2],
})
df.select([
    pl.all(),
    pl.col("type").count().over("c").alias("size")
])
```
:::
:::

>https://pola-rs.github.io/polars-book/user-guide/coming_from_pandas.html

## Coming From Spark to Polars

>https://pola-rs.github.io/polars-book/user-guide/coming_from_spark.html

## Polars: useful links

- [Polars](https://github.com/pola-rs/polars)
- [User guide](https://pola-rs.github.io/polars-book/user-guide/)
- [Polars GitHub repo](https://github.com/pola-rs/polars)
- [Pandas Vs Polars: a syntax and speed comparison](https://towardsdatascience.com/pandas-vs-polars-a-syntax-and-speed-comparison-5aa54e27497e)
- [Tips & tricks for working with strings in Polars](https://towardsdatascience.com/tips-and-tricks-for-working-with-strings-in-polars-ec6bb74aeec2)

## DuckDB

[DuckDB](https://duckdb.org/) is an in-process SQL OLAP database management system

```{.bash}
pip install duckdb==0.7.1
```

![Duck DB](./img/duckdb.png)

Also checkout [MotherDuck](https://motherduck.com/)

## DuckDB (contd.)

![Duck DB](./img/duckdb-not.png)

## RAPIDS

RAPIDS is a suite of open-source software libraries and APIs for executing data science pipelines entirely on GPUs—and can reduce training times from days to minutes. Built on NVIDIA® CUDA-X AI™, RAPIDS unites years of development in graphics, machine learning, deep learning, high-performance computing (HPC), and more.

https://www.nvidia.com/en-us/deep-learning-ai/software/rapids
